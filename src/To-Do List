Workout:
to verify:
1. create workout instances fields on the stack? YES
2. to implement only : constructor? YES
3. should we implement copy assignment operator? Workout class fields are const therefore
   copy assignment operator is not reasonable. NO
4. should we overload Destructor? NO
5.When the strategy is ordering the "most expensive" or "cheapest" exercise, and there is more
  than one such exercise, the customer will order the exercise with the smallest id.


Workout finished members: ALL
id, name, price, type
constructor , getId, getName, getPrice, getType
COMPLETE
_________________________________________________________________________________

Customer:
to verify:
1. create workout instances fields on the stack? YES
2. to implement only : constructor? YES
3. should we implement copy assignment operator? Workout class fields are const therefore
   copy assignment operator is not reasonable. NO
4. should we overload Destructor? NO

Customer finished members:
id, name
constructor , getId, getName
COMPLETE
_________________________________________________________________________________________

Sweaty/Cheap/HeavyMuscle/FullBody Customer:
to verify:
1. copy constructor implementation. valid?
2. toString(). valid?
3. vector<int> order should include *id's* of ordered workouts?
4. vector<int> order() should be allocated in stack?
5. rule of 5?
6. sort function for the price vector

missing:
1. HeavyMuscle order()
2. FullBody()

-------------------------------------------------------------------------------------------
File_Reader:
to verify:
1. to decide whether File_Reader class should have fields - or not. (right now: no fields, only 3 methods)
2. to decide on privacy - whether to keep it public like it is now (unrecommended) or to make it private.
3. optimize ?

---------------------------------------------------------------------------------------------
Studio:
to verify:
1. right now: Studio() constructor receives configFilePath *by value* and not by reference as required. (sends error
    when implemented by reference).
2. what empty constructor does???

missing:
vector<Trainer*> trainers , vector<BaseAction*> actionsLog , getActionsLog() , getWorkoutOptions() ,
getTrainer(int tid) ,  getNumOfTrainers() const , void start() ,